plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'com.novoda.static-analysis' version '1.2'
//    id 'maven-publish' apply false
}

group 'Printscript'
version '1.0-SNAPSHOT'

//subprojects {
//    apply plugin: "maven-publish"
//    publishing {
//        repositories {
//            maven {
//                name = "GitHubPackages"
//                url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
//                credentials {
//                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
//                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
//                }
//            }
//        }
//        publications {
//            interpreter(MavenPublication) {
//                from()
//            }
//        }
//    }
//}

test {
    finalizedBy jacocoTestReport
}


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.13'
}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

staticAnalysis {
    penalty {
        maxErrors = 0
        maxWarnings = 0
    }
    checkstyle {}
}

tasks.named("check") {
    dependsOn(tasks.evaluateViolations)
}
tasks.build.dependsOn(tasks.evaluateViolations)
tasks.build.dependsOn(tasks.googleJavaFormat)
verifyGoogleJavaFormat.mustRunAfter(tasks.googleJavaFormat)

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                counter = 'LINE'
//                value = 'COVEREDRATIO'
//              //  minimum = 0.8
//            }
//        }
//    }
//}

//tasks.build.dependsOn(jacocoTestCoverageVerification)//
//task jacocoMerge(type: JacocoMerge) {
//    def cliDir = project(':lexer').projectDir
//    def parserDir = project(':parser').projectDir
//
//    def cliDirTest = "$cliDir\\build\\jacoco\\test.exec"
//    def parserDirTest = "$parserDir\\build\\jacoco\\test.exec"
//
//    executionData(cliDirTest, parserDirTest)
//    destinationFile(new File("$projectDir\\build\\jacoco\\test.exec"))
//    jacocoTestReport {
//        reports {
//            html.enabled = true
//        }
//
//        afterEvaluate {
//            classDirectories.from(classDirectories.files.collect {
//                fileTree(dir: '.', include: '**/build/classes/')
//            })
//        }
//    }
//}
//
//task testReport(type: TestReport) {
//    destinationDir = file("$buildDir/reports/allTests")
//    reportOn subprojects*.test
//}
//
//task jacocoMerger(dependsOn: ['jacocoMerge', 'testReport']) {
//
//}
//test {
//    useJUnitPlatform()
//    finalizedBy jacocoTestReport // report is always generated after tests run
//}